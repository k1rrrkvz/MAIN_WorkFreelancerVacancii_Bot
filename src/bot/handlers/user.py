import os
from aiogram.filters import Command, CommandStart
from aiogram.types import Message

from aiogram import types
from loader import dp

from keyboards.inline import menu   

from database.db import add_user, get_user_data, update_trial_plan_for_user, calculate_remaining_time, get_user_time_registration, is_trial_plan_active, get_user_row_number
from keyboards.reply import cmd_b
#from handlers.admin import admin_panel


@dp.message(CommandStart())
async def start(message: Message):
    user_id = message.from_user.id
    user_data = get_user_data(user_id)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    if user_data:  
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç Meow –§—Ä–∏–ª–∞–Ω—Å!\n\n"
                             "üöÄ –ù–∞–π–¥–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –±—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ!\n\n"
                             "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help.\n\n"
                            "–î–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ /me")
        
        await message.answer("‚ùïÔ∏è –ù–∞–∂–º–∏—Ç–µ /Vacancies, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏")
    else:
        add_user(user_id)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.")

        await message.answer("–ü—Ä–æ—Ñ–µ—Å—Å–∏—è ¬´–í–µ–±-–î–∏–∑–∞–π–Ω–µ—Ä¬ª –≤—ã–±—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∏–∂–µ")

        welcome_text = """
‚ùïÔ∏è –ù–∞–∂–º–∏—Ç–µ /vacancies, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏\n‚ùïÔ∏è –ù–∞–∂–º–∏—Ç–µ /info, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏"""

        await message.answer(welcome_text, reply_markup = cmd_b.admin())



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /vacancies
@dp.message(Command("Vacancies"))
async def vacancies(message: types.Message):
    user_id = message.from_user.id
    get_user_row_number(user_id)  # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
    
    if is_trial_plan_active(user_id):

        await message.answer_photo(
            types.FSInputFile(path="src\\bot\\media\\botDescription.png"),
            caption=f"–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –∞–∫—Ç–∏–≤–Ω–∞. –î–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å: {calculate_remaining_time(user_id)}"
        )

    else:

        await message.answer_photo(
            types.FSInputFile(path="src\\bot\\media\\botDescription.png"),
            caption="–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å"
        )

        await message.answer('‚û§ –ù–∞–∂–º–∏—Ç–µ /tarifs')
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç—Ä–∏–∞–ª-–ø–ª–∞–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω
        update_trial_plan_for_user(user_id)



@dp.message(Command("info"))
async def infor(message: types.Message):
    user_id = message.from_user.id
    add_user(user_id)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    user_data = get_user_data(user_id)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    if user_data:
        response = "\n".join([f"üìå {key}: {value}" for key, value in user_data.items()])
    else:
        response = "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."

    await message.answer(f"‚úÖ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:\n\n{response}")


@dp.message(Command("sudo"))
async def infor(message: types.Message):
    if message.from_user.id == int(os.getenv('adminID')):
        await message.answer(f'–í—ã –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', reply_markup=menu.defShowBotAdminMenu())
    else:
        await message.reply('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º.', reply_markup=menu.defShowBotUserMenu())


@dp.message()
async def echo(message: types.Message):
    await message.answer(message.text if message.text else '–ê –≥–¥–µ —Ç–µ–∫—Å—Ç?')



# for admin











    
